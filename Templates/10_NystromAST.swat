package com.craftinginterpreters.lox;

import java.util.List;

{|
let ast = [	"Expr" : [	"Binary"	: [ "Expr left", "Token operator", "Expr right"],
						"Grouping"	: [ "Expr expression"],
						"Literal"	: [ "Object value"],
						"Unary"		: [ "Token operator", "Expr right"]	]
]
|}

{| for element in ast { |}

abstract class {( element.key )} {

  {| for type in element.value { |}
  
  static class {( type.key )} extends {( element.key )} {
    {( type.key )}({( type.value.joined(separator: ", ") )}) {
      {| for property in type.value { let name = property.components(separatedBy: " ")[1] |}
      {( "this.\(name) = \(name);" )}
      {| } |}
    }
    {| for property in type.value { |}
    final {( property )};
    {| } |}
  }
  {| } |}
}
{| } |}
